name: OUR Publish

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/our.yml'
      - '.github/workflows/reusable-build.yml'
      - 'scripts/**'
      - 'configs/**'

jobs:
  build-stage-1:
    strategy:
      fail-fast: false
      matrix:
        # LTO-enabled packages
        package:
          - ckbcomp # depby: calamares-git
          ### libastal series for hyprpanel ###
          - libastal-io-git 
          - libastal-apps-git 
          - libastal-auth-git
          - libastal-battery-git 
          - libastal-bluetooth-git 
          - libastal-greetd-git
          - libastal-hyprland-git 
          - libastal-mpris-git 
          - libastal-network-git
          - libastal-notifd-git 
          - appmenu-glib-translator-git 
          - libastal-powerprofiles-git
          - libastal-river-git 
          - libastal-wireplumber-git
          ### End libastal ###
          # Independent packages merged here
          - nodejs-gitmoji-cli
          - hiddify-next-bin
          - hyprland-interactive-screenshot
          - pmount
          - mihomo-party
          - fcitx5-skin-fluentdark-git
          - fcitx5-skin-fluentlight-git
          - watt-toolkit-bin
          - hfd-git
          - wsl-open
          - wsl2-ssh-agent
          - listen1
          - feeluown-download
          - ascii-image-converter
          - toolong
          - nali-nt-git
          - envfetch
          - nautilus-admin-gtk4
          - hyprls-git
          - hyprshot-gui
          - matugen-git
          - clipse-git
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: write
    with:
      package: ${{ matrix.package }}
      makepkg-conf: ./configs/makepkg.conf
      download-artifacts: false
    secrets: inherit

  build-stage-1-no-lto:
    strategy:
      fail-fast: false
      matrix:
        package:
          - libcava # depby: libastal-cava-git
          # Independent packages merged here
          - wezterm-git
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: write
    with:
      package: ${{ matrix.package }}
      makepkg-conf: ./configs/makepkg-no-lto.conf
      download-artifacts: false
    secrets: inherit

  build-stage-2:
    needs: 
      - build-stage-1
      - build-stage-1-no-lto # Depend on both LTO and no-LTO groups
    strategy:
      fail-fast: false
      matrix:
        package:
          - calamares-git # depon: ckbcomp
          ### libastal series for hyprpanel ###
          - libastal-git
          - libastal-4-git
          - libastal-cava-git
          - libastal-tray-git
          ### End libastal ###
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: write
    with:
      package: ${{ matrix.package }}
      makepkg-conf: ./configs/makepkg.conf
      download-artifacts: true
    secrets: inherit

  # ... Stage 3, 4, 5 follow the same pattern ...

  build-stage-3:
    needs: build-stage-2
    strategy:
      fail-fast: false
      matrix:
        package:
          - libastal-meta # depby: aylurs-gtk-shell-git
          - libastal-gjs-git # depon: libastal-git | depby: aylurs-gtk-shell-git
    uses: ./.github/workflows/reusable-build.yml
    permissions: { contents: write }
    with:
      package: ${{ matrix.package }}
      makepkg-conf: ./configs/makepkg.conf
      download-artifacts: true
    secrets: inherit

  build-stage-4:
    needs: build-stage-3
    strategy:
      fail-fast: false
      matrix:
        package:
          - aylurs-gtk-shell-git # depon: libastal-gjs-git, libastal-meta | depby: ags-hyprpanel-git
    uses: ./.github/workflows/reusable-build.yml
    permissions: { contents: write }
    with:
      package: ${{ matrix.package }}
      makepkg-conf: ./configs/makepkg.conf
      download-artifacts: true
    secrets: inherit

  build-stage-5:
    needs: build-stage-4
    strategy:
      fail-fast: false
      matrix:
        package:
          - ags-hyprpanel-git # depon: aylurs-gtk-shell-git
    uses: ./.github/workflows/reusable-build.yml
    permissions: { contents: write }
    with:
      package: ${{ matrix.package }}
      makepkg-conf: ./configs/makepkg.conf
      download-artifacts: true
    secrets: inherit

  #####################################################################
  # FINAL STAGE: Aggregate all packages, build repo, and publish.
  #####################################################################
  publish:
    name: Publish to Pages
    needs: build-stage-5 # This transitively depends on all previous stages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_SEC_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      
      - name: Download all built packages
        uses: actions/download-artifact@v4
        with:
          path: x86_64
          merge-multiple: true

      - name: Display downloaded files
        run: |
          echo "--- All built packages ---"
          ls -R x86_64

      - name: Generate repository database
        env:
          GPG_SIG_KEY: ${{ secrets.GPG_SIG_KEY }}
        run: bash scripts/repo-add.sh our

      - name: Generate package index page
        run: python scripts/gen-index.py

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish-to-hf:
    name: Publish to Hugging Face
    needs: build-stage-5
    runs-on: ubuntu-latest
    steps:
      - name: Download all built packages
        uses: actions/download-artifact@v4
        with:
          path: .
          merge-multiple: true

      - name: Release to Hugging Face
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          pip install -U "huggingface_hub[cli]"
          huggingface-cli upload --repo-type model Orion-zhen/our . . --commit-message "Publish latest packages"
