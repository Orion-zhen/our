name: OUR Publish

on:
  schedule:
    - cron: "0 0 * * 1"
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/our.yml"
      - ".github/workflows/reusable-build.yml"
      - "scripts/**"
      - "configs/**"

jobs:
  standalone:
    strategy:
      fail-fast: false
      matrix:
        # LTO-enabled packages
        package:
          - nodejs-gitmoji-cli
          - pmount
          # - mihomo-party
          - fcitx5-skin-fluentdark-git
          - fcitx5-skin-fluentlight-git
          - hfd-git
          - wsl-open
          - wsl2-ssh-agent
          - ascii-image-converter
          - toolong
          - nali-nt-git
          - envfetch
          - hyprls-git
          - hyprshot-gui
          - matugen-git
          - clipse-git
          - vmware-workstation
          - linux-wallpaperengine-git
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: write
    with:
      package: ${{ matrix.package }}
      lto: true
      download-artifacts: false
    secrets: inherit

  standalone-no-lto:
    strategy:
      fail-fast: false
      matrix:
        package:
          - wezterm-git
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: write
    with:
      package: ${{ matrix.package }}
      lto: false
      download-artifacts: false
    secrets: inherit

  stage-1:
    strategy:
      fail-fast: false
      matrix:
        # LTO-enabled packages
        package:
          - ckbcomp # depby: calamares-git
          - google-breakpad # depby: quickshell-git
          - python-safetensors # depby: python-transformers
          - python-msgspec # depby: python-vllm-bin
          - python-blake3 # depby: python-vllm-bin
          ### libastal series for hyprpanel ###
          - libastal-io-git
          - libastal-apps-git
          - libastal-auth-git
          - libastal-battery-git
          - libastal-bluetooth-git
          - libastal-greetd-git
          - libastal-hyprland-git
          - libastal-mpris-git
          - libastal-network-git
          - libastal-notifd-git
          - appmenu-glib-translator-git
          - libastal-powerprofiles-git
          - libastal-river-git
          - libastal-wireplumber-git
          ### End libastal ###
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: write
    with:
      package: ${{ matrix.package }}
      lto: true
      download-artifacts: false
    secrets: inherit

  stage-1-no-lto:
    strategy:
      fail-fast: false
      matrix:
        package:
          - libcava # depby: libastal-cava-git
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: write
    with:
      package: ${{ matrix.package }}
      lto: false
      download-artifacts: false
    secrets: inherit

  stage-2:
    needs: 
      - stage-1
      - stage-1-no-lto # Depend on both LTO and no-LTO groups
    strategy:
      fail-fast: false
      matrix:
        package:
          - calamares-git # depon: ckbcomp
          - quickshell-git # depon: google-breakpad
          ### libastal series for hyprpanel ###
          - libastal-git
          - libastal-4-git
          - libastal-cava-git
          - libastal-tray-git
          ### End libastal ###
    uses: ./.github/workflows/reusable-build.yml
    permissions:
      contents: write
    with:
      package: ${{ matrix.package }}
      lto: true
      download-artifacts: true
    secrets: inherit

  stage-3:
    needs: stage-2
    strategy:
      fail-fast: false
      matrix:
        package:
          ### libastal series for hyprpanel ###
          - libastal-meta # depby: aylurs-gtk-shell-git
          - libastal-gjs-git # depon: libastal-git | depby: aylurs-gtk-shell-git
          ### End libastal ###
    uses: ./.github/workflows/reusable-build.yml
    permissions: { contents: write }
    with:
      package: ${{ matrix.package }}
      lto: true
      download-artifacts: true
    secrets: inherit

  stage-4:
    needs: stage-3
    strategy:
      fail-fast: false
      matrix:
        package:
          - aylurs-gtk-shell-git # depon: libastal-gjs-git, libastal-meta | depby: ags-hyprpanel-git
    uses: ./.github/workflows/reusable-build.yml
    permissions: { contents: write }
    with:
      package: ${{ matrix.package }}
      lto: true
      download-artifacts: true
    secrets: inherit

  stage-5:
    needs: stage-4
    strategy:
      fail-fast: false
      matrix:
        package:
          - ags-hyprpanel-git # depon: aylurs-gtk-shell-git
    uses: ./.github/workflows/reusable-build.yml
    permissions: { contents: write }
    with:
      package: ${{ matrix.package }}
      lto: true
      download-artifacts: true
    secrets: inherit

  #####################################################################
  # FINAL STAGE: Aggregate all packages, build repo, and publish.
  #####################################################################
  publish:
    name: Publish to Pages
    needs: # This transitively depends on all previous stages
      - standalone
      - standalone-no-lto
      - stage-5
    runs-on: ubuntu-latest
    container: "archlinux:latest"
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_SEC_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      
      - name: Download all built packages
        uses: actions/download-artifact@v4
        with:
          path: x86_64
          merge-multiple: true

      - name: Display downloaded files
        run: |
          echo "--- All built packages ---"
          ls -R x86_64

      - name: Generate repository database
        env:
          GPG_SIG_KEY: ${{ secrets.GPG_SIG_KEY }}
        run: bash scripts/repo-add.sh our

      - name: Generate package index page
        run: |
          pacman -Syu python python-pip --noconfirm --overwrite '*'
          pip install zstandard --break-system-packages
          python scripts/packages.py

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # publish-to-hf:
  #   name: Publish to Hugging Face
  #   needs: # This transitively depends on all previous stages
  #     - standalone
  #     - standalone-no-lto
  #     - stage-5
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Download all built packages
  #       uses: actions/download-artifact@v4
  #       with:
  #         path: .
  #         merge-multiple: true

  #     - name: Release to Hugging Face
  #       env:
  #         HF_TOKEN: ${{ secrets.HF_TOKEN }}
  #       run: |
  #         pip install -U "huggingface_hub[cli]"
  #         huggingface-cli upload --repo-type model Orion-zhen/our . . --commit-message "Publish latest packages"
