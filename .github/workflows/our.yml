name: OUR Publish

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/our.yml'
      - '.github/workflows/reusable-build.yml'
      - 'scripts/**'
      - 'configs/**'

jobs:
  #####################################################################
  # STAGE 1: Build packages with no AUR dependencies.
  # This combines the original 'build-stage-1' and 'independent-build'.
  #####################################################################
  build-stage-1:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          # LTO enabled builds
          - name: base-lto
            packages: >-
              portable wemeet-bin xwaylandvideobridge execstack ckbcomp
              unionfs-fuse libastal-io-git libastal-apps-git libastal-auth-git
              libastal-battery-git libastal-bluetooth-git libastal-greetd-git
              libastal-hyprland-git libastal-mpris-git libastal-network-git
              libastal-notifd-git appmenu-glib-translator-git libastal-powerprofiles-git
              libastal-river-git libastal-wireplumber-git nodejs-gitmoji-cli hiddify-next-bin
              hyprland-interactive-screenshot pmount mihomo-party fcitx5-skin-fluentdark-git
              fcitx5-skin-fluentlight-git watt-toolkit-bin hfd-git wsl-open
              wsl2-ssh-agent listen1 feeluown-download ascii-image-converter
              toolong nali-nt-git envfetch nautilus-admin-gtk4 hyprls-git
              hyprshot-gui matugen-git clipse-git
            makepkg_conf: ./configs/makepkg.conf
          # No-LTO builds
          - name: base-no-lto
            packages: >-
              libcava wezterm-git
            makepkg_conf: ./configs/makepkg-no-lto.conf
    uses: ./.github/workflows/reusable-build.yml
    with:
      packages: ${{ matrix.packages }}
      makepkg-conf: ${{ matrix.makepkg_conf }}
      artifact-name: packages-${{ matrix.name }}
      download-artifacts: false
    secrets: inherit # Pass all secrets to the reusable workflow

  #####################################################################
  # STAGE 2-5: Build packages with dependencies on previous stages.
  #####################################################################
  build-stage-2:
    permissions:
      contents: write
    needs: build-stage-1
    uses: ./.github/workflows/reusable-build.yml
    with:
      packages: >-
        wemeet-wayland-screenshare-git calamares-git libastal-git
        libastal-4-git libastal-cava-git libastal-tray-git
      makepkg-conf: ./configs/makepkg.conf
      artifact-name: packages-stage-2
      download-artifacts: true
    secrets: inherit

  build-stage-3:
    permissions:
      contents: write
    needs: build-stage-2
    uses: ./.github/workflows/reusable-build.yml
    with:
      packages: >-
        libastal-meta libastal-gjs-git
      makepkg-conf: ./configs/makepkg.conf
      artifact-name: packages-stage-3
      download-artifacts: true
    secrets: inherit

  build-stage-4:
    permissions:
      contents: write
    needs: build-stage-3
    uses: ./.github/workflows/reusable-build.yml
    with:
      packages: >-
        aylurs-gtk-shell-git
      makepkg-conf: ./configs/makepkg.conf
      artifact-name: packages-stage-4
      download-artifacts: true
    secrets: inherit

  build-stage-5:
    permissions:
      contents: write
    needs: build-stage-4
    uses: ./.github/workflows/reusable-build.yml
    with:
      packages: >-
        ags-hyprpanel-git
      makepkg-conf: ./configs/makepkg.conf
      artifact-name: packages-stage-5
      download-artifacts: true
    secrets: inherit

  #####################################################################
  # FINAL STAGE: Aggregate all packages, build repo, and publish.
  #####################################################################
  publish:
    name: Publish to Pages
    needs: build-stage-5 # This transitively depends on all previous stages
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_SEC_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
      
      - name: Download all built packages
        uses: actions/download-artifact@v4
        with:
          path: x86_64
          merge-multiple: true

      - name: Display downloaded files
        run: |
          echo "--- All built packages ---"
          ls -R x86_64

      - name: Generate repository database
        env:
          GPG_SIG_KEY: ${{ secrets.GPG_SIG_KEY }}
        run: bash scripts/repo-add.sh our

      - name: Generate package index page
        run: python scripts/gen-index.py

      - name: Setup GitHub Pages
        uses: actions/configure-pages@v5

      - name: Upload pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: "."

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  publish-to-hf:
    name: Publish to Hugging Face
    needs: build-stage-5
    runs-on: ubuntu-latest
    steps:
      - name: Download all built packages
        uses: actions/download-artifact@v4
        with:
          path: .
          merge-multiple: true

      - name: Release to Hugging Face
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}
        run: |
          pip install -U "huggingface_hub[cli]"
          huggingface-cli upload --repo-type model Orion-zhen/our . . --commit-message "Publish latest packages"
